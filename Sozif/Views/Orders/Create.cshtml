@model Sozif.Orders

@{
    ViewData["Title"] = "Nowe zamówienie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Tworzenie zamówienia</h1>

<h5 class="error-message">@ViewBag.ErrorMessage</h5>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="OrderId" class="form-control" hidden="hidden" value="@Model.OrderId" />
            <input asp-for="OrderNumber" class="form-control" hidden="hidden" value="@Model.OrderNumber" />
            <input asp-for="OrderDate" class="form-control" hidden="hidden" value="@Model.OrderDate" />
            <input asp-for="RealisationDate" class="form-control" hidden="hidden" />
            <input asp-for="InvoiceId" class="form-control" hidden="hidden" />
            <input asp-for="UserId" class="form-control" hidden="hidden" value="@Model.UserId" />
            <div class="form-group">
                <label class="control-label">Klient</label>
                <input asp-for="CustomerId" class="form-control" value="@Model.CustomerId" hidden="hidden" />
                <input class="form-control" value="@ViewBag.Customer.ToString()" disabled="disabled" />
            </div>
            <div class="form-group">
                <label class="control-label">Adres realizacji</label>
                <select asp-for="AddressId" class="form-control" asp-items="ViewBag.AddressId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Stwórz" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="DeleteOrder" asp-route-id="@Model.OrderId"><input class="btn btn-secondary" type="button" value="Wycofaj i wróć do listy zamówień" /></a>
</div>

<hr />
<h4>Pozycje zamówienia</h4>
<p>
    <a asp-action="ChooseProduct" asp-route-id="@Model.OrderId" asp-route-from="New"><input class="btn btn-success" type="button" value="Dodaj pozycję" /></a>
</p>
</p>
<table id="Positions" class="table table-bordered sortable">
    <thead>
        <tr>
            <th class="sorter-textPL" style="vertical-align: middle">
                Produkt
            </th>
            <th style="vertical-align: middle">
                Ilość
            </th>
            <th class="sorter-cur" style="vertical-align: middle">
                Cena netto
            </th>
            <th class="sorter-perc" style="vertical-align: middle">
                Rabat
            </th>
            <th class="sorter-cur" style="vertical-align: middle">
                Cena netto po rabacie
            </th>
            <th class="sorter-cur" style="vertical-align: middle">
                Suma netto
            </th>
            <th class="sorter-cur" style="vertical-align: middle">
                Suma VAT
            </th>
            <th class="sorter-cur" style="vertical-align: middle">
                Suma brutto
            </th>
            <th class="sorter-false"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderPositions)
        {
            <tr>
                <td style="vertical-align: middle">
                    @item.Product.ProductName
                </td>
                <td style="vertical-align: middle">
                    @item.Count
                </td>
                <td style="vertical-align: middle">
                    @((item.Product.BaseNetPrice / 100.0).ToString("0.00")) zł
                </td>
                <td style="vertical-align: middle">
                    @if (item.Discount != null)
                    {
                        <text>@(item.Discount)%</text>
                    }
                </td>
                <td style="vertical-align: middle">
                    @((item.FinalNetPrice / 100.0).ToString("0.00")) zł
                </td>
                <td style="vertical-align: middle">
                    @((item.FinalNetValue / 100.0).ToString("0.00")) zł
                </td>
                <td style="vertical-align: middle">
                    @((item.FinalTaxValue / 100.0).ToString("0.00")) zł
                </td>
                <td style="vertical-align: middle">
                    @((item.FinalGrossValue / 100.0).ToString("0.00")) zł
                </td>
                <td style="vertical-align: middle">
                    <a asp-action="EditPosition" asp-route-id="@item.ProductId" asp-route-orderId="@item.OrderId" asp-route-from="newOrder"><input class="btn btn-outline-primary" type="button" value="Edytuj" /></a>
                    <a asp-action="DeletePosition" asp-route-id="@item.ProductId" asp-route-orderId="@item.OrderId" asp-route-from="newOrder"><input class="btn btn-outline-danger" type="button" value="Usuń" /></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $.tablesorter.addParser({
                id: 'cur',
                is: function (s, table, cell, $cell) {
                    return false;
                },
                format: function (s, table, cell, $cell) {
                    return s.replace(' zł', '').replace(',', '');
                },
                type: 'number'
            });
            $.tablesorter.addParser({
                id: 'perc',
                is: function (s, table, cell, $cell) {
                    return false;
                },
                format: function (s, table, cell, $cell) {
                    return s.replace('%', '');
                },
                type: 'number'
            });
            $.tablesorter.addParser({
                id: 'textPL',
                is: function (s, table, cell, $cell) {
                    return false;
                },
                format: function (s, table, cell, $cell) {
                    return s.toLowerCase().replace('ą', 'a').replace('ć', 'c').replace('ę', 'e').replace('ł', 'l').replace('ó', 'o').replace('ś', 's').replace('ż', 'z').replace('ź', 'z');
                },
                type: 'text'
            });
            $("#Positions").tablesorter({
                theme: 'blue',
                widgets: ['zebra']
            });
        });
    </script>
}