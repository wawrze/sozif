@model IEnumerable<Sozif.Orders>

@{
    ViewData["Title"] = "Lista zamówień";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Lista zamówień</h1>

<div class="row">
    <div class="col-md-6">
        <p>
            @if (Context.Session.GetString("EditOrders") == "true")
            {
                <a asp-action="ChooseCustomer"><input class="btn btn-success" type="button" value="Stwórz nowe zamówienie" /></a>
            }
        </p>
    </div>
    <div class="col-md-6">
        <p align="right">
            <input type="button" value="Resetuj filtry" onClick="clearFilters()" class="btn btn-outline-warning" form="filters" />
            <input type="submit" id="applyFiltersButton" value="Zastosuj filtry" class="btn btn-info" form="filters" />
        </p>
    </div>
</div>

<form asp-action="Index" id="filters" method="get">
    <table id="OrdersList" class="table table-bordered sortable">
        <thead>
            <tr>
                <th class="sorter-text" style="vertical-align: middle">
                    Numer zamówienia
                </th>
                <th class="sorter-textPL" style="vertical-align: middle">
                    Klient
                </th>
                <th style="vertical-align: middle">
                    Data zamówienia
                </th>
                <th class="sorter-textPL" style="vertical-align: middle">
                    Adres realizacji
                </th>
                <th style="vertical-align: middle">
                    Ilość pozycji
                </th>
                <th class="sorter-cur" style="vertical-align: middle">
                    Wartość netto
                </th>
                <th class="sorter-cur" style="vertical-align: middle">
                    Wartość VAT
                </th>
                <th class="sorter-cur" style="vertical-align: middle">
                    Wartość brutto
                </th>
                <th style="vertical-align: middle">
                    Data realizacji
                </th>
                <th style="vertical-align: middle">
                    Numer faktury
                </th>
                <th class="sorter-textPL" style="vertical-align: middle">
                    Osoba przyjmująca
                </th>
            </tr>
        </thead>
        <tbody class="tablesorter-no-sort">
            <tr>
                <td style="background-color: #99bfe6; vertical-align: middle" />
                <input type="text" id="orderFilter" name="order" value="@ViewBag.CurrentOrder">
                </td>
                <td style="background-color: #99bfe6; vertical-align: middle">
                    <input type="text" id="customerFilter" name="customer" value="@ViewBag.CurrentCustomer">
                </td>
                <td style="background-color: #99bfe6">
                    od: <input type="date" id="orderFromFilter" name="orderFrom" value="@ViewBag.OrderFrom">
                    <br />
                    do: <input type="date" id="orderToFilter" name="orderTo" value="@ViewBag.OrderTo">
                </td>
                <td style="background-color: #99bfe6; vertical-align: middle">
                    <input type="text" id="addressFilter" name="address" value="@ViewBag.CurrentAddress">
                </td>
                <td style="background-color: #99bfe6">
                    od: <input type="number" id="positionsFromFilter" min="0" name="positionsFrom" value="@ViewBag.PositionsFrom">
                    <br />
                    do: <input type="number" id="positionsToFilter" min="0" name="positionsTo" value="@ViewBag.PositionsTo">
                </td>
                <td style="background-color: #99bfe6">
                    od: <input type="number" step="0.01" min="0" id="netFromFilter" name="netFrom" value="@ViewBag.NetFrom">
                    <br />
                    do: <input type="number" step="0.01" min="0" id="netToFilter" name="netTo" value="@ViewBag.NetTo">
                </td>
                <td style="background-color: #99bfe6">
                    od: <input type="number" step="0.01" min="0" id="taxFromFilter" name="taxFrom" value="@ViewBag.TaxFrom">
                    <br />
                    do: <input type="number" step="0.01" min="0" id="taxToFilter" name="taxTo" value="@ViewBag.TaxTo">
                </td>
                <td style="background-color: #99bfe6">
                    od: <input type="number" step="0.01" min="0" id="grossFromFilter" name="grossFrom" value="@ViewBag.GrossFrom">
                    <br />
                    do: <input type="number" step="0.01" min="0" id="grossToFilter" name="grossTo" value="@ViewBag.GrossTo">
                </td>
                <td style="background-color: #99bfe6">
                    od: <input type="date" id="realisationFromFilter" name="realisationFrom" value="@ViewBag.RealisationFrom">
                    <br />
                    do: <input type="date" id="realisationToFilter" name="realisationTo" value="@ViewBag.RealisationTo">
                </td>
                <td style="background-color: #99bfe6; vertical-align: middle">
                    <input type="text" id="invoiceFilter" name="invoice" value="@ViewBag.CurrentInvoice">
                </td>
                <td style="background-color: #99bfe6; vertical-align: middle">
                    <input type="text" id="userFilter" name="user" value="@ViewBag.CurrentUser">
                </td>
            </tr>
        </tbody>
        <tbody>
            @foreach (var item in Model)
            {
                <tr onclick="location.href = '@(Url.Action("Details", "Orders", new { id = item.OrderId }))'">
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNumber)
                    </td>
                    <td>
                        @(item.Customer.ToString())
                    </td>
                    <td>
                        @(item.OrderDate.ToString("dd.MM.yyyy", DateTimeFormatInfo.InvariantInfo))
                    </td>
                    <td>
                        @(item.Address.FullAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PositionsCount)
                    </td>
                    <td>
                        @((item.NetValue / 100.0).ToString("0.00")) zł
                    </td>
                    <td>
                        @((item.TaxValue / 100.0).ToString("0.00")) zł
                    </td>
                    <td>
                        @((item.GrossValue / 100.0).ToString("0.00")) zł
                    </td>
                    <td>
                        @(item.RealisationDate?.ToString("dd.MM.yyyy", DateTimeFormatInfo.InvariantInfo))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Invoice.InvoiceNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $.tablesorter.addParser({
                id: 'cur',
                is: function (s, table, cell, $cell) {
                    return false;
                },
                format: function (s, table, cell, $cell) {
                    return s.replace(' zł', '').replace(',', '');
                },
                type: 'number'
            });
            $.tablesorter.addParser({
                id: 'textPL',
                is: function (s, table, cell, $cell) {
                    return false;
                },
                format: function (s, table, cell, $cell) {
                    return s.toLowerCase().replace('ą', 'a').replace('ć', 'c').replace('ę', 'e').replace('ł', 'l').replace('ó', 'o').replace('ś', 's').replace('ż', 'z').replace('ź', 'z');
                },
                type: 'text'
            });

            $("#OrdersList").tablesorter({
                theme: 'blue',
                widgets: ['zebra']
            });
        });
    </script>
}

<script type="text/javascript">
    function clearFilters() {
        document.getElementById("orderFilter").value = null;
        document.getElementById("customerFilter").value = null;
        document.getElementById("addressFilter").value = null;
        document.getElementById("invoiceFilter").value = null;
        document.getElementById("userFilter").value = null;
        document.getElementById("orderFromFilter").value = null;
        document.getElementById("orderToFilter").value = null;
        document.getElementById("positionsFromFilter").value = null;
        document.getElementById("positionsToFilter").value = null;
        document.getElementById("realisationFromFilter").value = null;
        document.getElementById("realisationToFilter").value = null;
        document.getElementById("netFromFilter").value = null;
        document.getElementById("netToFilter").value = null;
        document.getElementById("taxFromFilter").value = null;
        document.getElementById("taxToFilter").value = null;
        document.getElementById("grossFromFilter").value = null;
        document.getElementById("grossToFilter").value = null;
        document.getElementById("applyFiltersButton").click();
    }
</script>